As SRAM is very limited then there are need to be predefined regiaons
whith constant size. Moreover any dinamyc allocation asolutely denied!


Core memory map definition for all sGPU:
 -----------------------------------------
| size  | type  | destination             |
|-----------------------------------------|
| 512   | bytes | stack                   |
|-----------------------------------------|
| 384   | bytes | char buffer for glyphs  |
|-----------------------------------------|
| 1096  | bytes | FatFs                   |
|-----------------------------------------|
| 128   | bytes | lastTile8x8             |
|-----------------------------------------|
| 512   | bytes | lastTile16x16           |
|-----------------------------------------|
| 256   | bytes | rx text buffer          |
|-----------------------------------------|
| 512   | bytes | user palette            |
|-----------------------------------------|
| 1200  | bytes | background tile map     |
|-----------------------------------------|
|                 total: 4600             |
 -----------------------------------------


Memory map for "sGPU Mimi" (20k):
 -----------------------------------------
| size  | type  | destination             |
|-----------------------------------------|
| 2048  | bytes	 | USART command buffer   |
|-----------------------------------------|
| 5120  | bytes	 | tiles 8x8              |
|-----------------------------------------|
| 4096  | bytes	 | tiles 16x16            |
|-----------------------------------------|
| 2048  | bytes | lastSprite              |
|-----------------------------------------|
| 450   | bytes | spriteArr               |
|-----------------------------------------|
|                 total: 13762            |
|-----------------------------------------|
|                 whole: 18362            |
 -----------------------------------------


Memory map for "sGPU Mimi_2" (64k):
 -----------------------------------------
| size  | type  | destination             |
|-----------------------------------------|
| 4096  | bytes	 | USART command buffer   |
|-----------------------------------------|
| 10240 | bytes	 | tiles 8x8              |
|-----------------------------------------|
| 20480 | bytes	 | tiles 16x16            |
|-----------------------------------------|
| 10240 | bytes	 | tiles 32x32            |
|-----------------------------------------|
| 2048  | bytes | lastTile32x32           |
|-----------------------------------------|
| 8192  | bytes | lastSprite              |
|-----------------------------------------|
| 1250  | bytes | spriteArr               |
|-----------------------------------------|
|                 total: 56546            |
|-----------------------------------------|
|                 whole: 61146            |
 -----------------------------------------


 Memory map for "Pro sGPU" (128k):
 -----------------------------------------
| size  | type  | destination             |
|-----------------------------------------|
| 8192  | bytes  | USART command buffer   |
|-----------------------------------------|
| 12288 | bytes  | tiles 8x8              |
|-----------------------------------------|
| 32768 | bytes  | tiles 16x16            |
|-----------------------------------------|
| 49152 | bytes  | tiles 32x32            |
|-----------------------------------------|
| 2048  | bytes | lastTile32x32           |
|-----------------------------------------|
| 8192  | bytes | lastSprite              |
|-----------------------------------------|
| 1840  | bytes | spriteArr               |
|-----------------------------------------|
|                 total: 114480           |
|-----------------------------------------|
|                 whole: 119080           |
 -----------------------------------------


/* ---------------------------------------------------------------------- */

Command buffer (USART at current moment) is very important as it contains ALL
recievied commands what sGPU must to execute. 
Than larger buffer than longer sGPU can recieve commdands and greater performace will be.


Each sGPU support tiles (small squre images) whith different sizes,
each size consume different amount of SRAM:
  - Tiles 8x8 consume 64 bytes, i.e. 86 tiles will eat 5504 bytes of SRAM;
  - Tiles 16x16 consume 256 bytes, i.e. 16 tiles will eat 4096 bytes of SRAM;
To calculate number of avalible tiles just devide your amount of RAM by their sizes in bytes:
 - 10240 buffer / 64(8x8) bytes per tile = 160 tiles total;
 - 20480 buffer / 256(16x16) bytes = 80 tiles total;
 - 10240 buffer / 1024(32x32) bytes = 10 tiles total.


Last tile "lastTileYxY" is actually cache to speedup tile print on TFT.
It reduce color conversations as used previously converted tile.

As last tile, "lastSprite" is same thing but for sprites.
But sprites memory organased a bit different.
Each sprite can be one of sizes:
 - 1x1;
 - 1x2;
 - 2x1;
 - 2x2.
Where numbers represent tiles, and that mean what cache SRAM for "lastSprite"
will be: 4 tiles * 2 bytes per color * tile size in bytes (64, 256 or 1024).
Calculations of different sprites sizes:
8x8 tile = 64 bytes
1x1 = 64
1x2 = 128
2x1 = 128
2x2 = 256

16x16 tile = 256 bytes
1x1 = 256
1x2 = 512
2x1 = 512
2x2 = 1024

32x32 tile = 1024 bytes
1x1 = 1024
1x2 = 2048
2x1 = 2048
2x2 = 4096

But this is not all, there are 10 bytes per sprite for it struct:
2 - xPos;
2 - yPos;
1 - type;
1 - visible;
[4] - tiles arr.
Type files represent what size of tile and sprite are used:
 - 1x1:8 (16;32)
 - 1x2:8 (16;32)
 - 2x1:8 (16;32)
 - 2x2:8 (16;32)

Number of sprites is calculated as: 
 (amount of tiles 8x8 / 2) + (amount of tiles 16x16 / 2) + ...


Also each sGPU contain one background which uses tiles 8x8.
As screen size is 320x240 then number of tiles will be 40x30, this will
consume about 1200 butes of SRAM.
There is no way at this moment to use 16x16 tiles for background.

/* ---------------------------------------------------------------------- */
